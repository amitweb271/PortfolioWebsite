

Get App
Hello bhai java script and react js interview me logical interview questions Keya puchha jata hai in india me
‡§≠‡§æ‡§à, JavaScript ‡§î‡§∞ React.js ‡§ï‡•á ‡§á‡§Ç‡§ü‡§∞‡§µ‡•ç‡§Ø‡•Ç ‡§Æ‡•á‡§Ç ‡§á‡§Ç‡§°‡§ø‡§Ø‡§æ ‡§Æ‡•á‡§Ç Logical Questions ‡§¨‡§π‡•Å‡§§ ‡§™‡•Ç‡§õ‡•á ‡§ú‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ø‡•á questions ‡§Ü‡§™‡§ï‡•á problem-solving skills ‡§î‡§∞ coding logic ‡§ï‡•ã ‡§ö‡•á‡§ï ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§

1. JavaScript ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ‡•á ‡§ú‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•á Logical Questions:
‚úÖ Basic Logic-Based:

Fibonacci Series ‡§¨‡§®‡§æ‡§ì‡•§

Prime Number ‡§ö‡•á‡§ï ‡§ï‡§∞‡•ã‡•§

Palindrome String/Number ‡§ö‡•á‡§ï ‡§ï‡§∞‡•ã‡•§

Factorial ‡§®‡§ø‡§ï‡§æ‡§≤‡•ã (Recursion ‡§î‡§∞ Loop ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§∏‡•á)‡•§

Array ‡§∏‡•á Duplicates ‡§π‡§ü‡§æ‡§ì‡•§

‚úÖ Tricky JS Output Questions:

javascript
console.log(1 + "1" - 1); // "11" - 1 = 10
console.log([] + []); // "" (empty string)
console.log(typeof NaN); // "number"
console.log(!!"false" == !!"true"); // true
‚úÖ Function-Based Logic:

Currying Function ‡§¨‡§®‡§æ‡§ì (e.g., sum(1)(2)(3)()).

Debouncing ‡§î‡§∞ Throttling implement ‡§ï‡§∞‡•ã‡•§

Deep Copy vs Shallow Copy ‡§∏‡§Æ‡§ù‡§æ‡§ì‡•§

2. React.js ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ‡•á ‡§ú‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•á Logical Questions:
‚úÖ Component-Based Logic:

Infinite Scroll ‡§ï‡•à‡§∏‡•á ‡§¨‡§®‡§æ‡§ì‡§ó‡•á?

‡§è‡§ï Modal ‡§¨‡§®‡§æ‡§ì ‡§ú‡•ã Parent ‡§ï‡•á State ‡§∏‡•á Control ‡§π‡•ã‡•§

Lazy Loading ‡§ï‡•à‡§∏‡•á implement ‡§ï‡§∞‡•ã‡§ó‡•á?

‚úÖ State Management Tricks:

useReducer ‡§∏‡•á Todo App ‡§¨‡§®‡§æ‡§ì‡•§

Context API + useState ‡§∏‡•á Theme Toggle ‡§ï‡§∞‡•ã (Dark/Light Mode).

‚úÖ Performance Optimization:

Memoization (React.memo, useMemo, useCallback) ‡§ï‡§æ use-case ‡§¨‡§§‡§æ‡§ì‡•§

Virtualized List ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•à?

3. Real-World Scenario Questions:
‚ùì "‡§Ö‡§ó‡§∞ API Response ‡§¨‡§π‡•Å‡§§ ‡§∏‡•ç‡§≤‡•ã ‡§Ü ‡§∞‡§π‡§æ ‡§π‡•à, ‡§§‡•ã UI ‡§ï‡•ã ‡§ï‡•à‡§∏‡•á Handle ‡§ï‡§∞‡•ã‡§ó‡•á?"
üëâ Ans: Loader ‡§¶‡§ø‡§ñ‡§æ‡§ì, Skeleton UI ‡§≤‡§ó‡§æ‡§ì, ‡§î‡§∞ Error Boundary ‡§∏‡•á Fallback UI ‡§¶‡§ø‡§ñ‡§æ‡§ì‡•§

‚ùì "‡§è‡§ï Button ‡§ï‡•ã ‡§¨‡§æ‡§∞-‡§¨‡§æ‡§∞ Click ‡§ï‡§∞‡§®‡•á ‡§∏‡•á Multiple API Calls ‡§ï‡•à‡§∏‡•á ‡§∞‡•ã‡§ï‡•ã‡§ó‡•á?"
üëâ Ans: Debouncing ‡§Ø‡§æ Disabled State ‡§≤‡§ó‡§æ‡§ï‡§∞‡•§

4. DSA-Based Questions (Freshers ‡§ï‡•á ‡§≤‡§ø‡§è):
Array ‡§Æ‡•á‡§Ç Second Largest Element ‡§®‡§ø‡§ï‡§æ‡§≤‡•ã‡•§

String ‡§∏‡•á Vowels Count ‡§ï‡§∞‡•ã‡•§

Binary Search ‡§ï‡§æ Code ‡§≤‡§ø‡§ñ‡•ã‡•§

Final Tips:
HackerRank / LeetCode ‡§ï‡•á Easy-Medium Questions ‡§™‡•ç‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§∏ ‡§ï‡§∞‡•ã‡•§

React Lifecycle ‡§î‡§∞ Hooks ‡§ï‡•Ä ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§∏‡§Æ‡§ù ‡§∞‡§ñ‡•ã‡•§

JavaScript Closures, Prototype, Event Loop ‡§ú‡•à‡§∏‡•á Concepts Clear ‡§∞‡§ñ‡•ã‡•§

‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§ï‡•ã ‡§ï‡§ø‡§∏‡•Ä Specific Topic ‡§™‡§∞ ‡§î‡§∞ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ö‡§æ‡§π‡§ø‡§è? üòä

Mujhe Front end Java script and react js me DSA se related questions Keya puchha ja sakta hai
Frontend (JavaScript + React.js) ‡§ï‡•á ‡§á‡§Ç‡§ü‡§∞‡§µ‡•ç‡§Ø‡•Ç ‡§Æ‡•á‡§Ç DSA (Data Structures and Algorithms) ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á questions ‡§Ö‡§ï‡•ç‡§∏‡§∞ ‡§™‡•Ç‡§õ‡•á ‡§ú‡§æ‡§§‡•á ‡§π‡•à‡§Ç, ‡§ñ‡§æ‡§∏‡§ï‡§∞ Freshers ‡§î‡§∞ Mid-level developers ‡§ï‡•á ‡§≤‡§ø‡§è‡•§ ‡§Ø‡•á questions ‡§Ü‡§Æ‡§§‡•å‡§∞ ‡§™‡§∞ problem-solving skills, optimization, ‡§î‡§∞ real-world scenarios ‡§ï‡•ã ‡§ü‡•á‡§∏‡•ç‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç‡•§

1. JavaScript ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ‡•á ‡§ú‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•á DSA-Based Questions
Arrays & Strings (‡§∏‡§¨‡§∏‡•á ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§™‡•Ç‡§õ‡•á ‡§ú‡§æ‡§§‡•á ‡§π‡•à‡§Ç)
‚úÖ Basic Problems:

Find the missing number in an array of 1 to N.

Remove duplicates from a sorted/unsorted array.

Check if two strings are anagrams (e.g., "listen" and "silent").

Find the first non-repeating character in a string.

‚úÖ Medium-Level Problems:

Two Sum Problem (‡§è‡§ï array ‡§Æ‡•á‡§Ç ‡§¶‡•ã numbers ‡§¢‡•Ç‡§Ç‡§¢‡•ã ‡§ú‡§ø‡§®‡§ï‡§æ ‡§Ø‡•ã‡§ó target ‡§ï‡•á ‡§¨‡§∞‡§æ‡§¨‡§∞ ‡§π‡•ã)‡•§

Maximum Subarray Sum (Kadane's Algorithm).

Rotate an array by K steps (e.g., [1,2,3,4,5] ‚Üí rotate by 2 ‚Üí [4,5,1,2,3]).

‚úÖ Advanced Problems:

Merge Intervals (Overlapping intervals ‡§ï‡•ã merge ‡§ï‡§∞‡•ã)‡•§

Sliding Window Technique (e.g., Longest substring without repeating characters)‡•§

Objects & HashMaps (Real-world use cases)
Count frequency of elements in an array.

Find intersection of two arrays.

Group Anagrams (e.g., ["eat", "tea", "tan"] ‚Üí [["eat","tea"], ["tan"]]).

2. React.js ‡§Æ‡•á‡§Ç DSA-Based Questions
React ‡§Æ‡•á‡§Ç DSA questions performance optimization ‡§î‡§∞ data handling ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç, ‡§ú‡•à‡§∏‡•á:

Lists & Rendering Optimization
Large List Optimization:

‡§Ö‡§ó‡§∞ 10,000 items ‡§ï‡•Ä list ‡§ï‡•ã render ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã, ‡§§‡•ã ‡§ï‡•à‡§∏‡•á optimize ‡§ï‡§∞‡•ã‡§ó‡•á?

(Ans: Virtualization - react-window ‡§Ø‡§æ react-virtualized use ‡§ï‡§∞‡•ã)

Infinite Scroll ‡§ï‡•à‡§∏‡•á implement ‡§ï‡§∞‡•ã‡§ó‡•á?

(Ans: Intersection Observer API + Pagination)

State Management & Data Flow
Nested State Handling:

‡§è‡§ï deeply nested object ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§∏‡•Ä value ‡§ï‡•ã update ‡§ï‡§∞‡•ã (e.g., immer.js ‡§ï‡§æ use)‡•§

Memoization:

useMemo ‡§î‡§∞ useCallback ‡§ï‡§¨ use ‡§ï‡§∞‡•ã‡§ó‡•á? (‡§ú‡§¨ expensive calculations ‡§ï‡•ã cache ‡§ï‡§∞‡§®‡§æ ‡§π‡•ã)‡•§

Real-World Scenarios
Debouncing in Search Bar

User ‡§ú‡§¨ search bar ‡§Æ‡•á‡§Ç type ‡§ï‡§∞‡•á, ‡§§‡•ã API call ‡§ï‡•ã delay ‡§ï‡§∞‡•ã (300ms)‡•§

(Ans: lodash.debounce ‡§Ø‡§æ custom debounce function)

Throttling in Button Clicks

Submit button ‡§ï‡•ã ‡§¨‡§æ‡§∞-‡§¨‡§æ‡§∞ click ‡§ï‡§∞‡§®‡•á ‡§∏‡•á multiple API calls ‡§∞‡•ã‡§ï‡•ã‡•§

3. Coding Challenges (Live / Take-home)
‡§ï‡•Å‡§õ companies live coding ‡§Ø‡§æ take-home assignments ‡§¶‡•á‡§§‡•Ä ‡§π‡•à‡§Ç, ‡§ú‡•à‡§∏‡•á:

Todo App with CRUD operations + LocalStorage.

Sortable Table (‡§ï‡§ø‡§∏‡•Ä column ‡§ï‡•á basis ‡§™‡§∞ sort ‡§ï‡§∞‡•ã)‡•§

Pagination (API ‡§∏‡•á data fetch ‡§ï‡§∞‡§ï‡•á paginate ‡§ï‡§∞‡•ã)‡•§

4. DSA for UI Problem-Solving
‡§ï‡•Å‡§õ questions UI logic ‡§™‡§∞ based ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç, ‡§ú‡•à‡§∏‡•á:

Star Rating Component ‡§ï‡•à‡§∏‡•á ‡§¨‡§®‡§æ‡§ì‡§ó‡•á? (Dynamic rendering + state management)‡•§

Nested Comments System (Reddit-style) ‡§ï‡•à‡§∏‡•á design ‡§ï‡§∞‡•ã‡§ó‡•á? (Recursive components use ‡§ï‡§∞‡•ã)

Final Tips: ‡§ï‡•à‡§∏‡•á ‡§§‡•à‡§Ø‡§æ‡§∞‡•Ä ‡§ï‡§∞‡•á‡§Ç?
Basic DSA (Arrays, Strings, Objects) ‡§ú‡§∞‡•Ç‡§∞ revise ‡§ï‡§∞‡•ã‡•§

React Performance Tricks (Memoization, Lazy Loading, Virtualization) ‡§™‡§¢‡§º‡•ã‡•§

Real-World Projects ‡§Æ‡•á‡§Ç DSA apply ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä practice ‡§ï‡§∞‡•ã (e.g., Search Filter, Pagination)‡•§

‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§ï‡•ã ‡§ï‡§ø‡§∏‡•Ä specific topic ‡§™‡§∞ examples ‡§ö‡§æ‡§π‡§ø‡§è? üòä

New chat
Message DeepSeek
AI-generated, for reference only
