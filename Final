import React, { useState } from 'react';
import axios from 'axios';
import * as XLSX from 'xlsx';

const YourComponent = () => {
  const [data, setData] = useState([]);
  
  const fetchData = async () => {
    try {
      const response = await axios.get('your-file-api-url');
      const binaryString = response.data;
      const workbook = XLSX.read(binaryString, { type: 'binary' });
      const sheetName = workbook.SheetNames[0];
      const sheet = workbook.Sheets[sheetName];
      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });
      setData(jsonData);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  const handleFileUpload = (e) => {
    const file = e.target.files[0];
    const reader = new FileReader();
    
    reader.onload = (event) => {
      const binaryString = event.target.result;
      const workbook = XLSX.read(binaryString, { type: 'binary' });
      const sheetName = workbook.SheetNames[0];
      const sheet = workbook.Sheets[sheetName];
      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });
      setData(jsonData);
    };
    
    reader.readAsBinaryString(file);
  };
  
  const handleSubmit = () => {
    axios.post('your-backend-url', data)
      .then(response => {
        alert('Your data submitted successfully');
      })
      .catch(error => {
        console.error('Error submitting data:', error);
      });
  };

  return (
    <div>
      <button onClick={fetchData}>Fetch File</button>
      <input type="file" onChange={handleFileUpload} />
      <button onClick={handleSubmit}>Submit</button>
      
      <table>
        <thead>
          <tr>
            <th>Column 1</th>
            <th>Column 2</th>
            {/* Add more column headers if needed */}
          </tr>
        </thead>
        <tbody>
          {data.map((row, index) => (
            <tr key={index}>
              <td>{row[0]}</td>
              <td>{row[1]}</td>
              {/* Render more cells if needed */}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default YourComponent;

import React, { useState } from 'react';
import axios from 'axios';
import * as XLSX from 'xlsx';

const YourComponent = () => {
  const [data, setData] = useState([]);
  const [expanded, setExpanded] = useState(false);
  
  const fetchData = async () => {
    try {
      const response = await axios.get('your-file-api-url');
      const binaryString = response.data;
      const workbook = XLSX.read(binaryString, { type: 'binary' });
      const sheetName = workbook.SheetNames[0];
      const sheet = workbook.Sheets[sheetName];
      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });
      setData(jsonData);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  const handleFileUpload = (e) => {
    const file = e.target.files[0];
    const reader = new FileReader();
    
    reader.onload = (event) => {
      const binaryString = event.target.result;
      const workbook = XLSX.read(binaryString, { type: 'binary' });
      const sheetName = workbook.SheetNames[0];
      const sheet = workbook.Sheets[sheetName];
      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });
      setData(jsonData);
    };
    
    reader.readAsBinaryString(file);
  };
  
  const handleSubmit = () => {
    axios.post('your-backend-url', data)
      .then(response => {
        alert('Your data submitted successfully');
      })
      .catch(error => {
        console.error('Error submitting data:', error);
      });
  };

  const toggleExpanded = () => {
    setExpanded(!expanded);
  };

  return (
    <div>
      <button onClick={fetchData}>Fetch File</button>
      <input type="file" onChange={handleFileUpload} />
      <button onClick={handleSubmit}>Submit</button>
      
      <table>
        <thead>
          <tr>
            <th>Column 1</th>
            <th>Column 2</th>
            {/* Add more column headers if needed */}
          </tr>
        </thead>
        <tbody>
          <tr>
            <td onClick={toggleExpanded} style={{ cursor: 'pointer' }}>
              {expanded ? '▲' : '▼'}
            </td>
          </tr>
          {expanded && data.map((row, index) => (
            <tr key={index}>
              <td>{row[0]}</td>
              <td>{row[1]}</td>
              {/* Render more cells if needed */}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default YourComponent;


