
import React, { useState } from 'react';
import axios from 'axios';

const FileUpload = () => {
  const [selectedFile, setSelectedFile] = useState(null);

  const handleFileChange = (event) => {
    setSelectedFile(event.target.files[0]);
  };

  const handleSubmit = async (event) => {
    event.preventDefault();
    if (!selectedFile) {
      alert("Please select a file first!");
      return;
    }

    const formData = new FormData();
    formData.append('file', selectedFile);

    try {
      const response = await axios.post('/upload', formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        }
      });
      console.log('File uploaded successfully:', response.data);
    } catch (error) {
      console.error('Error uploading file:', error);
    }
  };

  return (
    <div>
      <form onSubmit={handleSubmit}>
        <input type="file" onChange={handleFileChange} />
        <button type="submit">Upload</button>
      </form>
    </div>
  );
};

export default FileUpload;



import React, { useState } from 'react';
import axios from 'axios';
import * as XLSX from 'xlsx';
import { Container, Row, Col, Button, Form, Alert, Spinner } from 'react-bootstrap';

function App() {
  const [fileData, setFileData] = useState(null);
  const [apiData, setApiData] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const handleFileUpload = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (event) => {
        const data = new Uint8Array(event.target.result);
        const workbook = XLSX.read(data, { type: 'array' });
        const firstSheet = workbook.Sheets[workbook.SheetNames[0]];
        const jsonData = XLSX.utils.sheet_to_json(firstSheet, { header: 1 });
        setFileData(jsonData);
        console.log(jsonData);
      };
      reader.readAsArrayBuffer(file);
    }
  };

  const fetchData = async () => {
    setLoading(true);
    setError(null);
    try {
      const response = await axios.get('https://api.example.com/data');
      setApiData(response.data);
      console.log(response.data);
    } catch (error) {
      setError('Error fetching data');
      console.error('Error fetching data', error);
    }
    setLoading(false);
  };

  return (
    <Container className="mt-5">
      <Row>
        <Col>
          <h1 className="text-center">Upload Excel File and Fetch Data</h1>
          <Form>
            <Form.Group controlId="formFile" className="mb-3">
              <Form.Label>Select Excel File</Form.Label>
              <Form.Control type="file" accept=".xlsx, .xls" onChange={handleFileUpload} />
            </Form.Group>
          </Form>
          <Button variant="primary" onClick={fetchData} disabled={loading}>
            {loading ? <Spinner animation="border" size="sm" /> : 'Fetch Data'}
          </Button>
          {error && <Alert variant="danger" className="mt-3">{error}</Alert>}
        </Col>
      </Row>
      <Row className="mt-5">
        <Col>
          <h2>Uploaded File Data</h2>
          {fileData && (
            <pre>{JSON.stringify(fileData, null, 2)}</pre>
          )}
        </Col>
      </Row>
      <Row className="mt-5">
        <Col>
          <h2>API Data</h2>
          {apiData && (
            <pre>{JSON.stringify(apiData, null, 2)}</pre>
          )}
        </Col>
      </Row>
    </Container>
  );
}

export default App;




import React, { useState } 


from 'react';
import axios from 'axios';
import * as XLSX from 'xlsx';

const YourComponent = () => {
  const [data, setData] = useState([]);
  
  const fetchData = async () => {
    try {
      const response = await axios.get('your-file-api-url');
      const binaryString = response.data;
      const workbook = XLSX.read(binaryString, { type: 'binary' });
      const sheetName = workbook.SheetNames[0];
      const sheet = workbook.Sheets[sheetName];
      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });
      setData(jsonData);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  const handleFileUpload = (e) => {
    const file = e.target.files[0];
    const reader = new FileReader();
    
    reader.onload = (event) => {
      const binaryString = event.target.result;
      const workbook = XLSX.read(binaryString, { type: 'binary' });
      const sheetName = workbook.SheetNames[0];
      const sheet = workbook.Sheets[sheetName];
      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });
      setData(jsonData);
    };
    
    reader.readAsBinaryString(file);
  };
  
  const handleSubmit = () => {
    axios.post('your-backend-url', data)
      .then(response => {
        alert('Your data submitted successfully');
      })
      .catch(error => {
        console.error('Error submitting data:', error);
      });
  };

  return (
    <div>
      <button onClick={fetchData}>Fetch File</button>
      <input type="file" onChange={handleFileUpload} />
      <button onClick={handleSubmit}>Submit</button>
      
      <table>
        <thead>
          <tr>
            <th>Column 1</th>
            <th>Column 2</th>
            {/* Add more column headers if needed */}
          </tr>
        </thead>
        <tbody>
          {data.map((row, index) => (
            <tr key={index}>
              <td>{row[0]}</td>
              <td>{row[1]}</td>
              {/* Render more cells if needed */}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default YourComponent;

import React, { useState } from 'react';
import axios from 'axios';
import * as XLSX from 'xlsx';

const YourComponent = () => {
  const [data, setData] = useState([]);
  const [expanded, setExpanded] = useState(false);
  
  const fetchData = async () => {
    try {
      const response = await axios.get('your-file-api-url');
      const binaryString = response.data;
      const workbook = XLSX.read(binaryString, { type: 'binary' });
      const sheetName = workbook.SheetNames[0];
      const sheet = workbook.Sheets[sheetName];
      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });
      setData(jsonData);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  const handleFileUpload = (e) => {
    const file = e.target.files[0];
    const reader = new FileReader();
    
    reader.onload = (event) => {
      const binaryString = event.target.result;
      const workbook = XLSX.read(binaryString, { type: 'binary' });
      const sheetName = workbook.SheetNames[0];
      const sheet = workbook.Sheets[sheetName];
      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });
      setData(jsonData);
    };
    
    reader.readAsBinaryString(file);
  };
  
  const handleSubmit = () => {
    axios.post('your-backend-url', data)
      .then(response => {
        alert('Your data submitted successfully');
      })
      .catch(error => {
        console.error('Error submitting data:', error);
      });
  };

  const toggleExpanded = () => {
    setExpanded(!expanded);
  };

  return (
    <div>
      <button onClick={fetchData}>Fetch File</button>
      <input type="file" onChange={handleFileUpload} />
      <button onClick={handleSubmit}>Submit</button>
      
      <table>
        <thead>
          <tr>
            <th>Column 1</th>
            <th>Column 2</th>
            {/* Add more column headers if needed */}
          </tr>
        </thead>
        <tbody>
          <tr>
            <td onClick={toggleExpanded} style={{ cursor: 'pointer' }}>
              {expanded ? '▲' : '▼'}
            </td>
          </tr>
          {expanded && data.map((row, index) => (
            <tr key={index}>
              <td>{row[0]}</td>
              <td>{row[1]}</td>
              {/* Render more cells if needed */}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default YourComponent;


