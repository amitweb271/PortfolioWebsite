import React, { useState, useEffect } from 'react';
import axios from 'axios';

const AddressForm = () => {
  const [addresses, setAddresses] = useState([{ address: '' }]);

  useEffect(() => {
    // Fetch existing addresses on component mount
    fetchAddresses();
  }, []);

  const fetchAddresses = async () => {
    try {
      const response = await axios.get('api/addresses');
      setAddresses(response.data);
    } catch (error) {
      console.error('Error fetching addresses:', error);
    }
  };

  const handleInputChange = (index, event) => {
    const newAddresses = [...addresses];
    newAddresses[index].address = event.target.value;
    setAddresses(newAddresses);
  };

  const handleAddAddress = () => {
    setAddresses([...addresses, { address: '' }]);
  };

  const handleRemoveAddress = (index) => {
    const newAddresses = [...addresses];
    newAddresses.splice(index, 1);
    setAddresses(newAddresses);
  };

  const handleSubmit = async () => {
    try {
      await axios.post('api/addresses', addresses);
      console.log('Addresses saved successfully!');
    } catch (error) {
      console.error('Error saving addresses:', error);
    }
  };

  return (
    <div>
      {addresses.map((address, index) => (
        <div key={index}>
          <input
            type="text"
            value={address.address}
            onChange={(e) => handleInputChange(index, e)}
          />
          {index === addresses.length - 1 && (
            <button onClick={handleAddAddress}>+</button>
          )}
          {index !== 0 && (
            <button onClick={() => handleRemoveAddress(index)}>-</button>
          )}
        </div>
      ))}
      <button onClick={handleSubmit}>Submit</button>
    </div>
  );
};

export default AddressForm;



import React, { useState, useEffect } from 'react';
import axios from 'axios';

const AddressForm = () => {
  const [addresses, setAddresses] = useState([]);
  const [states, setStates] = useState([]);

  useEffect(() => {
    // Fetch list of states and addresses from the API on component mount
    fetchStates();
    fetchAddresses();
  }, []);

  const fetchStates = async () => {
    try {
      const response = await axios.get('STATES_API_URL');
      setStates(response.data);
    } catch (error) {
      console.error('Error fetching states:', error);
    }
  };

  const fetchAddresses = async () => {
    try {
      const response = await axios.get('ADDRESSES_API_URL');
      setAddresses(response.data);
    } catch (error) {
      console.error('Error fetching addresses:', error);
    }
  };

  const handleInputChange = (index, fieldName, value) => {
    const updatedAddresses = [...addresses];
    updatedAddresses[index][fieldName] = value;
    setAddresses(updatedAddresses);
  };

  const handleStateSelect = (index, stateId) => {
    const updatedAddresses = [...addresses];
    updatedAddresses[index]['stateId'] = stateId;
    setAddresses(updatedAddresses);
  };

  const handleUpdateAddress = async () => {
    try {
      await axios.put('UPDATE_API_URL', addresses);
      alert('Addresses updated successfully!');
    } catch (error) {
      console.error('Error updating addresses:', error);
    }
  };

  return (
    <div>
      {addresses.map((address, index) => (
        <div key={index}>
          <input
            type="text"
            value={address.address}
            onChange={e => handleInputChange(index, 'address', e.target.value)}
          />
          <input
            type="text"
            value={address.pinCode}
            onChange={e => handleInputChange(index, 'pinCode', e.target.value)}
            placeholder="Pin Code"
          />
          <select
            value={address.stateId}
            onChange={e => handleStateSelect(index, e.target.value)}
          >
            <option value="">Select State</option>
            {states.map(state => (
              <option key={state.id} value={state.id}>{state.name}</option>
            ))}
          </select>
          <input
            type="text"
            value={address.country}
            onChange={e => handleInputChange(index, 'country', e.target.value)}
            placeholder="Country"
          />
        </div>
      ))}
      <button onClick={handleUpdateAddress}>Update Addresses</button>
    </div>
  );
};

export default AddressForm;




import React, { useState, useEffect } from 'react';
import axios from 'axios';

const AddressForm = () => {
  const [addresses, setAddresses] = useState([{ 
    address: '',
    pinCode: '',
    stateId: '', // Added stateId field to store the selected state's ID
    stateName: '',
    country: ''
  }]);
  const [states, setStates] = useState([]);

  useEffect(() => {
    // Fetch list of states from the API on component mount
    fetchStates();
  }, []);

  const fetchStates = async () => {
    try {
      const response = await axios.get('STATES_API_URL');
      setStates(response.data);
    } catch (error) {
      console.error('Error fetching states:', error);
    }
  };

  const handleInputChange = (index, fieldName, value) => {
    const updatedAddresses = [...addresses];
    updatedAddresses[index][fieldName] = value;
    setAddresses(updatedAddresses);
  };

  const handleStateSelect = (index, stateId) => {
    const updatedAddresses = [...addresses];
    updatedAddresses[index]['stateId'] = stateId;
    setAddresses(updatedAddresses);
  };

  const handleAddAddress = () => {
    setAddresses([...addresses, { 
      address: '',
      pinCode: '',
      stateId: '',
      stateName: '',
      country: ''
    }]);
  };

  const handleRemoveAddress = index => {
    const updatedAddresses = [...addresses];
    updatedAddresses.splice(index, 1);
    setAddresses(updatedAddresses);
  };

  const handleSubmit = async () => {
    try {
      await axios.post('API_URL', addresses);
      alert('Addresses saved successfully!');
    } catch (error) {
      console.error('Error saving addresses:', error);
    }
  };

  return (
    <div>
      {addresses.map((address, index) => (
        <div key={index}>
          <input
            type="text"
            value={address.address}
            onChange={e => handleInputChange(index, 'address', e.target.value)}
          />
          <input
            type="text"
            value={address.pinCode}
            onChange={e => handleInputChange(index, 'pinCode', e.target.value)}
            placeholder="Pin Code"
          />
          <select
            value={address.stateId}
            onChange={e => handleStateSelect(index, e.target.value)}
          >
            <option value="">Select State</option>
            {states.map(state => (
              <option key={state.id} value={state.id}>{state.name}</option>
            ))}
          </select>
          <input
            type="text"
            value={address.country}
            onChange={e => handleInputChange(index, 'country', e.target.value)}
            placeholder="Country"
          />
          {index === addresses.length - 1 && (
            <span onClick={handleAddAddress}>+</span>
          )}
          {index !== 0 && (
            <span onClick={() => handleRemoveAddress(index)}>X</span>
          )}
        </div>
      ))}
      <button onClick={handleSubmit}>Save Addresses</button>
    </div>
  );
};

export default AddressForm;


import React, { useState, useEffect } from 'react';
import axios from 'axios';

const AddressForm = () => {
  const [addresses, setAddresses] = useState([]);
  const [states, setStates] = useState([]);

  useEffect(() => {
    // Fetch list of states and addresses from the API on component mount
    fetchStates();
    fetchAddresses();
  }, []);

  const fetchStates = async () => {
    try {
      const response = await axios.get('STATES_API_URL');
      setStates(response.data);
    } catch (error) {
      console.error('Error fetching states:', error);
    }
  };

  const fetchAddresses = async () => {
    try {
      const response = await axios.get('ADDRESSES_API_URL');
      setAddresses(response.data);
    } catch (error) {
      console.error('Error fetching addresses:', error);
    }
  };

  const handleInputChange = (index, fieldName, value) => {
    const updatedAddresses = [...addresses];
    updatedAddresses[index][fieldName] = value;
    setAddresses(updatedAddresses);
  };

  const handleStateSelect = (index, stateId) => {
    const updatedAddresses = [...addresses];
    updatedAddresses[index]['stateId'] = stateId;
    setAddresses(updatedAddresses);
  };

  const handleUpdateAddress = async () => {
    try {
      // Extract only state IDs from the addresses array
      const stateIds = addresses.map(address => address.stateId);
      
      // Send state IDs to the backend for storage
      await axios.post('SAVE_STATE_IDS_API_URL', stateIds);
      
      alert('State IDs saved successfully!');
    } catch (error) {
      console.error('Error saving state IDs:', error);
    }
  };

  return (
    <div>
      {addresses.map((address, index) => (
        <div key={index}>
          <input
            type="text"
            value={address.address}
            onChange={e => handleInputChange(index, 'address', e.target.value)}
          />
          <input
            type="text"
            value={address.pinCode}
            onChange={e => handleInputChange(index, 'pinCode', e.target.value)}
            placeholder="Pin Code"
          />
          <select
            value={address.stateId}
            onChange={e => handleStateSelect(index, e.target.value)}
          >
            <option value="">Select State</option>
            {states.map(state => (
              <option key={state.id} value={state.id}>{state.name}</option>
            ))}
          </select>
          <input
            type="text"
            value={address.country}
            onChange={e => handleInputChange(index, 'country', e.target.value)}
            placeholder="Country"
          />
        </div>
      ))}
      <button onClick={handleUpdateAddress}>Save State IDs</button>
    </div>
  );
};

export default AddressForm;

